version: '3.8'

networks:
  indeece:
    external: true

volumes:
  postgres-data:

services:
  postgres:
    image: postgres:15-alpine
    container_name: user_data
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5439:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - indeece

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - indeece

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/users
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8080:8080"
    networks:
      - indeece

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    depends_on:
      - auth-service
      - eureka-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "4000:4000"
    networks:
      - indeece

  income-expense-service:
    build:
      context: ./income-expense-service
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/users
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
    ports:
      - "8081:8081"
    networks:
      - indeece
